plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.graalvm.buildtools.native' version '0.10.2'
}

group = 'kr.co.mz'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    // GraalVM 호환성을 위해 하이버네이트 다운그레이드
    implementation 'org.hibernate.orm:hibernate-core:6.4.2.Final'


    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

graalvmNative {
    // 네이티브 이미지 생성을 위한 바이너리 설정
    binaries {
        // 주 바이너리 설정(주 실행 파일)
        main {
            // 네이티브 이미지 생성 또는 실패시 오류 보고
            buildArgs.add('--no-fallback')
        }
    }
    // 테스트 건너뛰기
    testSupport = false
}

task compressNativeImage(type: Exec) {
    dependsOn tasks.named('nativeCompile')
    commandLine 'upx', '--best', '--lzma', "$buildDir/native/nativeCompile/mzd-interview-assignment"
}

tasks.named('nativeCompile') {
    finalizedBy compressNativeImage
}